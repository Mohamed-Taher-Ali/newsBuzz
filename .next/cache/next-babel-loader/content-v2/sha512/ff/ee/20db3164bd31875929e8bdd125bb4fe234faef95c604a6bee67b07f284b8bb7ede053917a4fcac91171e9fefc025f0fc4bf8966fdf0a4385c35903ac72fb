{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/moslem/Downloads/nextTest/pages/index.js\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from '../components/Card';\n\nfunction NewsBuzz() {\n  let {\n    0: news,\n    1: setNews\n  } = useState([]),\n      {\n    0: page,\n    1: setPage\n  } = useState(0),\n      {\n    0: isFetching,\n    1: setIsFetching\n  } = useState(false);\n  useEffect(() => {\n    getNewsFunc();\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isFetching) return;\n    getNewsFunc();\n  }, [isFetching]);\n\n  let handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n    setIsFetching(true);\n  };\n\n  let getNewsFunc = async () => {\n    let nextPage = page + 1;\n    let reqNews = await axios.get(`/api/getNews?page=${nextPage}`);\n\n    if (reqNews.status == 200) {\n      setNews([...news, ...reqNews.data.news]);\n      setIsFetching(false);\n      setPage(nextPage);\n    }\n  };\n\n  return !news.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mid\",\n    children: news.map((n, i) => {\n      var _n$source, _n$source2, _n$keywords;\n\n      console.log(n);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        avatar: n === null || n === void 0 ? void 0 : (_n$source = n.source) === null || _n$source === void 0 ? void 0 : _n$source.url,\n        title: n === null || n === void 0 ? void 0 : (_n$source2 = n.source) === null || _n$source2 === void 0 ? void 0 : _n$source2.title,\n        newsTitle: n === null || n === void 0 ? void 0 : n.title,\n        date: new Date(n === null || n === void 0 ? void 0 : n.created_at).toDateString(),\n        tags: n === null || n === void 0 ? void 0 : (_n$keywords = n.keywords) === null || _n$keywords === void 0 ? void 0 : _n$keywords.map(k => k.name)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\nexport default (() => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cont\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(NewsBuzz, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 2\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["/home/moslem/Downloads/nextTest/pages/index.js"],"names":["useEffect","useState","axios","Card","NewsBuzz","news","setNews","page","setPage","isFetching","setIsFetching","getNewsFunc","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight","nextPage","reqNews","get","status","data","length","map","n","i","console","log","source","url","title","Date","created_at","toDateString","keywords","k","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from '../components/Card'\n\n\n\nfunction NewsBuzz() {\n\n  let [news, setNews] = useState([]),\n      [page, setPage] = useState(0),\n      [isFetching, setIsFetching] = useState(false)\n\n  useEffect(()=>{getNewsFunc()}, [])\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  \n  useEffect(() => {\n    if (!isFetching) return;\n    getNewsFunc();\n  }, [isFetching]);\n\n  let handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    ) return;\n    setIsFetching(true);\n  };\n\n  let getNewsFunc = async () => {\n    let nextPage = page + 1;\n    let reqNews = await axios\n      .get(`/api/getNews?page=${nextPage}`);\n\n    if (reqNews.status == 200) {\n      setNews([...news, ...reqNews.data.news]);\n      setIsFetching(false);\n      setPage(nextPage);\n    }\n  }\n\n\n  return !news.length ? <div>Loading...</div> : (\n      <div className='mid'>\n        {\n          news.map((n, i)=>{\n            console.log(n);\n            return(\n            <Card\n              key={i} avatar={n?.source?.url} title={n?.source?.title}\n              newsTitle={n?.title} date={new Date(n?.created_at).toDateString()}\n              tags ={n?.keywords?.map(k=>k.name)}\n            />\n          )})\n        }\n      </div>\n  );\n}\n\nexport default ()=>(\n  <div className='cont'>\n      <div className='side'></div>\n<NewsBuzz />\n <div className='side'></div>\n    </div>\n)"]},"metadata":{},"sourceType":"module"}